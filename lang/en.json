{
   "eqfield": "The :f must be equal to :p.",
   "nefield": "The :f must not equal to :p.",
   "gtfield": "The :f must be greater than :p.",
   "gtefield": "The :f must be greater than or equal to :p.",
   "ltfield": "The :f must be less than :p.",
   "ltefield": "The :f must be less than or equal to :p.",
   "eqcsfield": "The :f must be equal to :p.",
   "necsfield": "The :f cannot be equal to :p.",
   "gtcsfield": "The :f must be greater than :p.",
   "gtecsfield": "The :f must be greater than or equal to :p.",
   "ltcsfield": "The :f must be less than :p.",
   "ltecsfield": "The :f must be less than or equal to :p.",

   "cidr": "The :f must contain a valid CIDR notation.",
   "cidrv4": "The :f must contain a valid CIDR notation for an IPv4 address.",
   "cidrv6": "The :f must contain a valid CIDR notation for an IPv6 address.",
   "datauri": "The :f must contain a valid Data URI.",
   "ip": "The :f must be a valid IP address.",
   "ipv4": "The :f must be a valid IPv4 address.",
   "ipv6": "The :f must be a valid IPv6 address.",
   "mac": "The :f must contain a valid MAC address.",
   "tcp_addr": "The :f must be a valid TCP address.",
   "tcp4_addr": "The :f must be a valid IPv4 TCP address.",
   "tcp6_addr": "The :f must be a valid IPv6 TCP address.",
   "udp_addr": "The :f must be a valid UDP address.",
   "udp4_addr": "The :f must be a valid IPv4 UDP address.",
   "udp6_addr": "The :f must be a valid IPv6 UDP address.",
   "unix_addr": "The :f must be a resolvable UNIX address.",
   "uri": "The :f must be a valid URI.",
   "url": "The :f must be a valid URL.",

   "alpha": "The :f can only contain alphabetic characters.",
   "alphanum": "The :f can only contain alphanumeric characters.",
   "alphanumunicode": "The :f can contain alphanumeric and unicode characters.",
   "alphaunicode": "The :f can only contain alphabetic and unicode characters.",
   "ascii": "The :f must contain only ascii characters.",
   "boolean": "The :f must be a valid boolean value.",
   "contains": "The :f must contain the text \":p\".",
   "containsany": "The :f must contain at least one of the following characters \":p\".",
   "endsnotwith": "The :f must not end with \":p\".",
   "endswith": "The :f must end with \":p\".",
   "excludes": "The :f cannot contain the text \":p\".",
   "excludesall": "The :f cannot contain any of the following characters \":p\".",
   "excludesrune": "The :f cannot contain the following \":p\".",
   "lowercase": "The :f must be a lowercase string.",
   "uppercase": "The :f must be a uppercase string.",
   "multibyte": "The :f must contain multibyte characters.",
   "number": "The :f must be a valid number.",
   "printascii": "The :f must contain only printable ascii characters.",
   "startsnotwith": "The :f must not start with \":p\".",
   "startstwith": "The :f must start with \":p\".",

   "base64": "The :f must be a valid Base64 string.",
   "datetime": "The :f does not match the :p.",
   "e164": "The :f must be a valid E.164 formatted phone number.",
   "email": "The :f must be a valid email address.",
   "hexadecimal": "The :f must be a valid hexadecimal.",
   "hexcolor": "The :f must be a valid HEX color.",
   "hsl": "The :f must be a valid HSL color.",
   "hsla": "The :f must be a valid HSLA color.",
   "rgb": "The :f must be a valid RGB color.",
   "rgba": "The :f must be a valid RGBA color.",
   "isbn": "The :f must be a valid ISBN number.",
   "isbn10": "The :f must be a valid ISBN-10 number.",
   "isbn13": "The :f must be a valid ISBN-13 number.",
   "json": "The :f must be a valid JSON string.",
   "jwt": "The :f must be a valid JWT string.",
   "latitude": "The :f must contain valid latitude coordinates.",
   "longitude": "The :f must contain valid longitude coordinates.",
   "postcode_iso3166_alpha2": "The :f does not match postcode format of :p country.",
   "postcode_iso3166_alpha2_field": "The :f does not match postcode format of country in :p field.",
   "ssn": "The :f must be a valid SSN number.",
   "uuid": "The :f must be a valid UUID.",
   "uuid3": "The :f must be a valid version 3 UUID.",
   "uuid4": "The :f must be a valid version 4 UUID.",
   "uuid5": "The :f must be a valid version 5 UUID.",
   "semver": "The :f must be valid semantic server.",

   "eq": "The :f is not equal to :p",
   "ne": "The :f should not be equal to :p",
   "gt": {
      "item": "The :f must have more than :p items.",
      "string": "The :f must greater than :p characters.",
      "numeric": "The :f must greater than :p."
   },
   "gte": {
      "item": "The :f must have :p items or more.",
      "string": "The :f must be greater than or equal to :p characters.",
      "numeric": "The :f must be greater than or equal to :p."
   },
   "lt": {
      "item": "The :f must have less than :p items.",
      "string": "The :f must be less than :p characters.",
      "numeric": "The :f must be less than :p."
   },
   "lte": {
      "array": "The :f must not have more than :p items.",
      "string": "The :f must be less than or equal to :p characters.",
      "numeric": "The :f must be less than or equal to :p."
   },

   "len": {
      "item": "The :f must have :p items.",
      "string": "The :f must be :p characters in length.",
      "numeric": "The :f must be equal to :p."
   },
   "max": {
      "item": "The :f must not have more than :p items.",
      "string": "The :f must not greater than :p characters.",
      "numeric": "The :f must not greater than :p."
   },
   "min": {
      "item": "The :f must have at least :p items.",
      "string": "The :f must be at least :p characters.",
      "numeric": "The :f must be at least :p."
   },
   "oneof": "The :f must be one of [:p].",
   "required": "The :f cannot be empty.",
   "required_if": "The :f cannot be empty.",
   "required_unless": "The :f cannot be empty.",
   "required_with": "The :f cannot be empty.",
   "required_with_all": "The :f cannot be empty.",
   "required_without": "The :f cannot be empty.",
   "required_without_all": "The :f cannot be empty.",
   "unique": "The :f must contain unique values."
}